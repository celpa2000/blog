---

interface Post {
  url: string;
  
  frontmatter: {
    title: string;
    tags?: string[];
  };
}
import type { AstroGlobal } from 'astro';
import type { GetStaticPathsResult } from 'astro';


import BaseLayout from '../../layouts/BaseLayout.astro';
import BlogPost from '../../components/BlogPost.astro';
import type { string } from 'astro:schema';


export async function getStaticPaths(): Promise<GetStaticPathsResult> {
  const allPosts = await Astro.glob('../posts/*.md');

  return [
    { params: { tag: "astro" } ,props: {posts: allPosts}},
    { params: { tag: "éxitos" },props: {posts: allPosts} },
    { params: { tag: "comunidad" },props: {posts: allPosts} },
    { params: { tag: "bloguear" } ,props: {posts: allPosts}},
    { params: { tag: "contratiempos" },props: {posts: allPosts} },
    { params: { tag: "aprender en público" },props: {posts: allPosts} },
  ];
}

const { tag } = Astro.params;
const { posts }: { posts: Post[] } = Astro.props;

const filteredPosts = posts.filter((post) => post.frontmatter.tags?.includes(tag));
---
<BaseLayout pageTitle={tag}>
  <p>Entradas etiquetadas con {tag}</p>
  
  
  <ul>
    {filteredPosts.map(post => <BlogPost url={post.url} title={post.frontmatter.title}/>)}
  </ul>
  
</BaseLayout>